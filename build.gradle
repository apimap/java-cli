plugins {
    id 'application'
    id 'java'
    id 'org.mikeneck.graalvm-native-image' version 'v1.4.1'
    id "com.github.spotbugs" version "5.0.9"
}

group 'io.apimap.cli'

ext {
    javaMainClass = "io.apimap.cli.TopLevelCommandCollection"
    execFileName = "apimap"
}

repositories {
    mavenCentral()
    maven {
        url = uri("https://maven.pkg.github.com/apimap/java-rest-client")
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("MULTI_PACKAGES_USER")
            password = project.findProperty("gpr.key") ?: System.getenv("MULTI_PACKAGES_TOKEN")
        }
    }
    maven {
        url = uri("https://maven.pkg.github.com/apimap/java-file-interface")
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("MULTI_PACKAGES_USER")
            password = project.findProperty("gpr.key") ?: System.getenv("MULTI_PACKAGES_TOKEN")
        }
    }
}

dependencies {
    annotationProcessor 'info.picocli:picocli-codegen:4.6.3'

    implementation 'info.picocli:picocli:4.6.3'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.3'
    implementation "org.apache.httpcomponents.client5:httpclient5:5.1.3"
    implementation 'org.graalvm.sdk:graal-sdk:22.1.0.1'
    implementation 'org.slf4j:slf4j-nop:1.7.36' // NOP since we have to give the user more understandable errors

    implementation 'io.apimap.file:file-interface:1.0'
    implementation 'io.apimap.client:rest-client:3.0.1'
    implementation 'io.apimap.api:rest-interface:2.2.0'

    testImplementation 'junit:junit:4.13.2'
}

nativeImage {
    graalVmHome = System.getenv('GRAALVM_HOME')
    mainClass = javaMainClass
    executableName = execFileName
    outputDirectory = file("$buildDir/executable")
    arguments(
            "--enable-http",
            "--enable-https",
            "--verbose",
            "--no-fallback",
            "--report-unsupported-elements-at-runtime",
            "-H:Log=registerResource:",
            "-H:ReflectionConfigurationFiles=graalvm-configuration/native-code-reflection-config.json",
            "-H:ReflectionConfigurationFiles=graalvm-configuration/apache-reflection-config.json",
            "-H:ResourceConfigurationFiles=graalvm-configuration/resource-config.json",
            "-H:DynamicProxyConfigurationFiles=graalvm-configuration/apache-proxy-config.json",
    )
    doLast{
        if(org.gradle.internal.os.OperatingSystem.current().isWindows()) {
            exec {
                executable 'windows/alter-windows-exec-property-table.bat'
            }
        }
    }
}

generateNativeImageConfig {
    enabled = false
}

application {
    mainClass = javaMainClass
}

compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

jar {
    archiveBaseName = execFileName
    manifest {
        attributes(
                "Main-Class": javaMainClass,
                'Apimap-Version': archiveVersion
        )
    }
}