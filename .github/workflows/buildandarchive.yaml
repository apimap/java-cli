name: "Build and Archive"
on:
  push:
    branches:
      - master
  workflow_dispatch:
jobs:
  tagVersion:
    name: "Setup Semantic Release"
    runs-on: ubuntu-20.04
    outputs:
      tag: ${{ steps.semantic_release_info.outputs.version }}
      releaseUrl: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Gets semantic release info
        id: semantic_release_info
        uses: jossef/action-semantic-release-info@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: v${{ steps.semantic_release_info.outputs.version }}
          tag_name: v${{ steps.semantic_release_info.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  linuxBuild:
    name: "Build Linux Artifacts"
    runs-on: ubuntu-22.04
    needs: tagVersion
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - uses: ayltai/setup-graalvm@v1
        with:
          java-version: 17
          graalvm-version: 21.3.0
          native-image: true
      - name: Build
        run: ./gradlew -Pversion=${{ needs.tagVersion.outputs.tag }} nativeImage
        env:
          MULTI_PACKAGES_TOKEN: ${{ secrets.MULTI_PACKAGES_TOKEN }}
          MULTI_PACKAGES_USER: ${{ secrets.MULTI_PACKAGES_USER }}
      - name: Upload amd64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.tagVersion.outputs.releaseUrl }}
          asset_path: "build/executable/apimap"
          asset_name: apimap-linux-amd64
          asset_content_type: application/octet-stream

  windowsBuild:
    name: "Build Windows Artifacts"
    runs-on: windows-2022
    needs: tagVersion
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - uses: ayltai/setup-graalvm@v1
        with:
          java-version: 17
          graalvm-version: 21.3.0
          native-image: true
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Build
        run: ./gradlew -Pversion='${{ needs.tagVersion.outputs.tag }}' nativeImage
        env:
          MULTI_PACKAGES_TOKEN: ${{ secrets.MULTI_PACKAGES_TOKEN }}
          MULTI_PACKAGES_USER: ${{ secrets.MULTI_PACKAGES_USER }}
      - name: Upload windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.tagVersion.outputs.releaseUrl }}
          asset_path: "build/executable/apimap.exe"
          asset_name: apimap-windows-amd64
          asset_content_type: application/octet-stream

  macosBuild:
    name: "Build MacOS Artifacts"
    runs-on: macos-12
    needs: tagVersion
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - uses: ayltai/setup-graalvm@v1
        with:
          java-version: 17
          graalvm-version: 21.3.0
          native-image: true
      - name: Build
        run: ./gradlew -Pversion=${{ needs.tagVersion.outputs.tag }} nativeImage
        env:
          MULTI_PACKAGES_TOKEN: ${{ secrets.MULTI_PACKAGES_TOKEN }}
          MULTI_PACKAGES_USER: ${{ secrets.MULTI_PACKAGES_USER }}
      - name: Upload windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.tagVersion.outputs.releaseUrl }}
          asset_path: "build/executable/apimap"
          asset_name: apimap-macos-amd64
          asset_content_type: application/octet-stream